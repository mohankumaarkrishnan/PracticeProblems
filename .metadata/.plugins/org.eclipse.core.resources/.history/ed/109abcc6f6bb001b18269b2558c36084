import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.stream.Collector;
import java.util.stream.Collectors;

public class SmallestAbsoluteDifference {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int[] a= {-1,5,10,20,28,3};
		int[] b= {26,134,135,15,17};
		Integer[] diff=smallDifference(a, b);
		System.out.println(diff[0]);
		System.out.println(diff[1]);
	}
	
	public static Integer[] smallDifference(int[] a,int[] b) {
		Map<Integer,Integer[]> map= new LinkedHashMap<>();
		Map<Integer,Integer[]> map1= new LinkedHashMap<>();
		
		for(int i=0;i<a.length;i++) {
			for(int j=0;j<b.length;j++) {
				map.put(Math.abs(a[i]-b[j]), new Integer[] {a[i],b[j]});
				
			}
		}
		int s = map.keySet().stream().sorted().findFirst().get();
		System.out.print(s);
		return map.get(s);
//		System.out.println(map1);
//		return map1.entrySet().stream().findFirst().get().getValue();
	}

}
